CMAKE_MINIMUM_REQUIRED(VERSION 2.8.11)

SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/module)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${EXECUTABLE_OUTPUT_PATH}/lib)

INCLUDE( ExternalProject )
ExternalProject_Add(skp2tri
	SOURCE_DIR ${PROJECT_SOURCE_DIR}/skp2tri
	CMAKE_ARGS
		-DCMAKE_TOOLCHAIN_FILE=${PROJECT_SOURCE_DIR}/skp2tri/Toolchain-windows-mingw32.cmake
		-DEXECUTABLE_OUTPUT_PATH=${EXECUTABLE_OUTPUT_PATH}
	INSTALL_COMMAND ""
)

# Project common include dir
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)

# Add all subprojects
ADD_SUBDIRECTORY(mesh)
ADD_SUBDIRECTORY(descriptors)
ADD_SUBDIRECTORY(partial_pointcloud)
ADD_SUBDIRECTORY(tools)


####### TESTS #######


# Find requirements and sources for tests
FIND_PACKAGE(CppUnit REQUIRED)
IF( NOT CPPUNIT_FOUND )
    MESSAGE(FATAL_ERROR "Module CppUnit required and not found.")
ENDIF()
FILE(GLOB SRC_TEST */test/*.cpp)
INCLUDE_DIRECTORIES(
	${PROJECT_SOURCE_DIR}/mesh/include
	${PROJECT_SOURCE_DIR}/descriptors/include
	${PROJECT_SOURCE_DIR}/partial_pointcloud/include
)
ADD_EXECUTABLE(test EXCLUDE_FROM_ALL test_runner.cxx ${SRC_TEST})
TARGET_LINK_LIBRARIES(test mesh descriptors ${CPPUNIT_LIBRARY})
SET_TARGET_PROPERTIES(test PROPERTIES EXCLUDE_FROM_ALL true)
